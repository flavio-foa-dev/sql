git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:flavio-foa-dev/sql.git
git push -u origin main

A selecionar campos específicos da tabela
Como definir um alias para os nomes dos campos
A filtrar registros, utilizando o WHERE para campos do tipo de texto
Operadores =, !=,<>, LIKE e NOT LIKE
A diferença entre = e LIKE
O funcionamento do caractere % no filtro com LIKE e NOT LIKE
O funcionamento do caractere _ no filtro com LIKE e NOT LIKE
Como filtrar utilizando IS NULL e IS NOT NULL
Como filtrar registros para campos do tipos relacionados a números, datas e horas
=, !=, <>, <, <=, >, >=
BETWEEN
Como filtrar registros para campos do tipo booleano
=, !=, <>
Como funciona os operadores lógicos AND e OR

Como funciona a chave primária
Como funciona os campos que aceitam NULL e que não aceitam NULL (NOT NULL)
Como funciona um campo UNIQUE
Como criar uma chave primária
Como funciona a chave estrangeira
Como criar uma chave estrangeira
Como criar consultas com relacionamentos
INNER JOIN
LEFT JOIN
RIGHT JOIN
FULL JOIN
CROSS JOIN

Como funciona as restrições de chave estrangeira
A diferença entre RESTRICT e CASCADE
Como aplicar tipos diferentes de restrições de chave estrangeira no DELETE
RESTRICT
CASCADE
A aplicar tipos diferentes de restrições de chave estrangeira no UPDATE
RESTRICT
CASCADE


Como ordenar uma consulta
Ordenar utilizando os nomes de campo
Ordenar com mais de um campo
Ordenar por posição do campo
Ordenar por ordem Crescente e Decrescente
Ordenar com campos de tabelas diferentes
Como limitar quantidade e paginar registros de consulta
LIMIT
OFFSET
Como funcionam as funções de agregação
COUNT
SUM
MAX
MIN
AVG
Como funciona a função de arredondamento ROUND
Como funciona o agrupamento de dados
A diferença entre DISTINCT e GROUP BY
Onde utilizar o DISTINCT
Onde utilizar o GROUP BY
Como utilizar o GROUP BY com os nomes de campo
Como utilizar o GROUP BY por posição
Como funcionam os filtros por funções de agrupamento, utilizando HAVING
A diferença entre WHERE e HAVING
Como utilizar o HAVING

No processo de geração de relatórios completos, por precisarmos “passar” por diversas tabelas, às vezes acabamos nos perguntando: por onde começo?

O ideal é sempre começar pela tabela que possui a informação central do relatório, e a partir dela ir fazendo to
dos os relacionamentos com os JOINs corretos.

utilizar o operador IN;
as sub-consultas;
sub-consultas podem ser utilizadas como um campo ou como uma "tabela virtual";

funcoes em banco de dados sql mudam de um banco para outro

o que mais diferencia um sistema de banco de dados de outros: funções;
funções que manipulam diferentes tipos de dados;
Datas
Números
Strings
conversão de tipos

o conceito de "tabelas virtuais" e visões, em inglês, views;
o processo de criação de views;
Tratamos relatórios utilizando views;
pontos importantes sobre performance quando o assunto são Views;

Organizar (e separar) de forma lógica nossas tabelas

## Qual o propósito dos schemas no PostgreSQL
Uma analogia ao mundo da programação seriam os módulos, pacotes ou namespaces. Uma analogia ao mundo dos Sistemas Operacionais seriam as pastas. Schemas servem para organizar e separar nossas tabelas.

conceito de modelagem de dados;
schemas no PostgreSQL que nos ajudam a organizar nossas tabelas;
análise de requisitos e sobre modelos utilizados neste processo
```
 CREATE DATABASE nome
    [ [ WITH ] [ OWNER [=] user_name ]
           [ TEMPLATE [=] template ]
           [ ENCODING [=] codificação ] ]
           [ LC_COLLATE [=] lc_collate ]
           [ LC_CTYPE [=] lc_ctype ]
           [ TABLESPACE [=] tablespace_name]
           [ ALLOW_CONNECTIONS [=] allowconn]
           [ CONNECTION LIMIT [=] connlimit]
           [ IS TEMPLATE [=] istemplate]

```

Desmembramos a criação de um banco de dados
criar uma tabela;
ALTER TABLE para alterar a estrutura de uma tabela;
diferença entre comandos DDL e DML.

# aspas simples refere-se strings valores
# aspas duplas refere-se aliases campos colunas

# COPY pessoa FROM '/pasta/arquivo.csv';
Desta forma nós importaríamos os dados do arquivo para a tabela

# COPY pessoa TO '/pasta/arquivo.csv';
Este comando exporta o conteúdo da tabela pessoa para o arquivo.

- comando INSERT SELECT que realiza inserções a partir de uma consulta;
- importação e exportação de dados em arquivos CSV.
- SEQUENCEs do PostgreSQL;
- ENUM postgress;
- bancos de dados na vida real.